{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport { format } from \"date-fns\";\nexport class MessagesService {\n  constructor(rootStore, messagesStore) {\n    this.rootStore = rootStore;\n    this.messagesStore = messagesStore;\n    this.messageApi = void 0;\n    this.messageApi = rootStore.api.messageApi;\n    makeAutoObservable(this, {}, {\n      autoBind: true\n    });\n  }\n  setUserId(id) {\n    this.messagesStore.userId = id;\n  }\n  setChatId(id) {\n    this.messagesStore.chatId = id;\n  }\n  setList(messages) {\n    this.messagesStore.list = messages;\n  }\n  handleChangeTextareaValue(e) {\n    this.messagesStore.textareaValue = e.target.value;\n  }\n  async initMessageList(chatId) {\n    const list = await this.messageApi.search(chatId);\n    this.messagesStore.list = list;\n  }\n  async handleSendBoxClick() {\n    const newMessage = {\n      title: this.messagesStore.textareaValue,\n      userId: this.messagesStore.userId,\n      chatId: this.messagesStore.chatId\n    };\n    this.messagesStore.textareaValue = '';\n    await this.messageApi.create(newMessage);\n    this.initMessageList(this.messagesStore.chatId);\n  }\n  formatTime(date) {\n    return format(new Date(date), 'HH:mm');\n  }\n}","map":{"version":3,"names":["makeAutoObservable","format","MessagesService","constructor","rootStore","messagesStore","messageApi","api","autoBind","setUserId","id","userId","setChatId","chatId","setList","messages","list","handleChangeTextareaValue","e","textareaValue","target","value","initMessageList","search","handleSendBoxClick","newMessage","title","create","formatTime","date","Date"],"sources":["D:/messager/client/src/components/messages.service.ts"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\nimport { RootStore } from \"../store/root.store\";\r\nimport { MessagesStore } from \"./messages.store\";\r\nimport { MessageApi } from \"../api/entities/message/message.api\";\r\nimport { MessageSchema } from \"../api/entities/message/message.types\";\r\nimport { format } from \"date-fns\";\r\n\r\nexport class MessagesService {\r\n    private readonly messageApi: MessageApi\r\n\r\n    constructor(private readonly rootStore: RootStore, private readonly messagesStore: MessagesStore) {\r\n        this.messageApi = rootStore.api.messageApi\r\n        makeAutoObservable(this, {}, {autoBind: true})\r\n    }\r\n\r\n    setUserId(id: number) {\r\n        this.messagesStore.userId = id\r\n    }\r\n\r\n    setChatId(id: number) {\r\n        this.messagesStore.chatId = id\r\n    }\r\n\r\n    setList(messages: MessageSchema[]) {\r\n        this.messagesStore.list = messages\r\n    }\r\n\r\n    handleChangeTextareaValue(e: React.ChangeEvent<HTMLTextAreaElement>) {\r\n        this.messagesStore.textareaValue = e.target.value\r\n    }\r\n\r\n    async initMessageList(chatId: number) {\r\n        const list = await this.messageApi.search(chatId)\r\n        this.messagesStore.list = list\r\n    }\r\n\r\n    async handleSendBoxClick() {\r\n        const newMessage = {\r\n            title: this.messagesStore.textareaValue,\r\n            userId: this.messagesStore.userId,\r\n            chatId: this.messagesStore.chatId\r\n        }\r\n    \r\n        this.messagesStore.textareaValue = ''\r\n        await this.messageApi.create(newMessage)\r\n        this.initMessageList(this.messagesStore.chatId)\r\n    }\r\n\r\n    formatTime(date: string) {\r\n        return format(new Date(date), 'HH:mm')\r\n    }\r\n}"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAKzC,SAASC,MAAM,QAAQ,UAAU;AAEjC,OAAO,MAAMC,eAAe,CAAC;EAGzBC,WAAWA,CAAkBC,SAAoB,EAAmBC,aAA4B,EAAE;IAAA,KAArED,SAAoB,GAApBA,SAAoB;IAAA,KAAmBC,aAA4B,GAA5BA,aAA4B;IAAA,KAF/EC,UAAU;IAGvB,IAAI,CAACA,UAAU,GAAGF,SAAS,CAACG,GAAG,CAACD,UAAU;IAC1CN,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;MAACQ,QAAQ,EAAE;IAAI,CAAC,CAAC;EAClD;EAEAC,SAASA,CAACC,EAAU,EAAE;IAClB,IAAI,CAACL,aAAa,CAACM,MAAM,GAAGD,EAAE;EAClC;EAEAE,SAASA,CAACF,EAAU,EAAE;IAClB,IAAI,CAACL,aAAa,CAACQ,MAAM,GAAGH,EAAE;EAClC;EAEAI,OAAOA,CAACC,QAAyB,EAAE;IAC/B,IAAI,CAACV,aAAa,CAACW,IAAI,GAAGD,QAAQ;EACtC;EAEAE,yBAAyBA,CAACC,CAAyC,EAAE;IACjE,IAAI,CAACb,aAAa,CAACc,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;EACrD;EAEA,MAAMC,eAAeA,CAACT,MAAc,EAAE;IAClC,MAAMG,IAAI,GAAG,MAAM,IAAI,CAACV,UAAU,CAACiB,MAAM,CAACV,MAAM,CAAC;IACjD,IAAI,CAACR,aAAa,CAACW,IAAI,GAAGA,IAAI;EAClC;EAEA,MAAMQ,kBAAkBA,CAAA,EAAG;IACvB,MAAMC,UAAU,GAAG;MACfC,KAAK,EAAE,IAAI,CAACrB,aAAa,CAACc,aAAa;MACvCR,MAAM,EAAE,IAAI,CAACN,aAAa,CAACM,MAAM;MACjCE,MAAM,EAAE,IAAI,CAACR,aAAa,CAACQ;IAC/B,CAAC;IAED,IAAI,CAACR,aAAa,CAACc,aAAa,GAAG,EAAE;IACrC,MAAM,IAAI,CAACb,UAAU,CAACqB,MAAM,CAACF,UAAU,CAAC;IACxC,IAAI,CAACH,eAAe,CAAC,IAAI,CAACjB,aAAa,CAACQ,MAAM,CAAC;EACnD;EAEAe,UAAUA,CAACC,IAAY,EAAE;IACrB,OAAO5B,MAAM,CAAC,IAAI6B,IAAI,CAACD,IAAI,CAAC,EAAE,OAAO,CAAC;EAC1C;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
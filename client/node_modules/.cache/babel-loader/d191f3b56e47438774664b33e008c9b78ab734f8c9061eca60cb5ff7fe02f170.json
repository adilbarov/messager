{"ast":null,"code":"var _jsxFileName = \"D:\\\\messager\\\\client\\\\src\\\\components\\\\chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport img from '../icons/send_message.png';\nimport { observer } from 'mobx-react-lite';\nimport { useStore } from '../hooks/use-store';\nimport { useAsyncEffect } from '../hooks/use-async-effect';\nimport { format } from 'date-fns';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    messagesStore: {\n      services: {\n        textareaValue,\n        handleSendBoxClick,\n        handleChangeTextareaValue,\n        setChatId,\n        setUserId,\n        initMessageList\n        // formatDate\n      },\n\n      list\n    }\n  } = useStore();\n  const {\n    userId,\n    chatId\n  } = useParams();\n  useEffect(() => {\n    if (userId) setUserId(+userId);\n    if (chatId) setChatId(+chatId);\n  }, [userId, chatId]);\n  useAsyncEffect(() => {\n    initMessageList();\n  }, []);\n  const formatDate = date => {\n    return format(new Date(date), 'HH:mm');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-area\",\n      children: list.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: list.filter(message => chatId && message.chatId === +chatId).map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-row ${userId && message.userId === +userId ? 'right' : 'left'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message-cloud ${userId && message.userId === +userId ? 'right' : 'left'}`,\n            children: [userId && message.userId === +userId ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-sender\",\n              children: `User ${message.userId}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: message.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-timestamp\",\n              children: formatDate(message.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0439 \\u043D\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom-area\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea\",\n          value: textareaValue,\n          onChange: handleChangeTextareaValue,\n          placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435...\",\n          rows: 3,\n          cols: 67\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), textareaValue.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img,\n          alt: \"img\",\n          className: \"send-box\",\n          onClick: handleSendBoxClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}, \"2WNdU1ljIvhj4r0q2h/vSunMvaY=\", false, function () {\n  return [useStore, useParams, useAsyncEffect];\n})), \"2WNdU1ljIvhj4r0q2h/vSunMvaY=\", false, function () {\n  return [useStore, useParams, useAsyncEffect];\n});\n_c2 = Chat;\nvar _c, _c2;\n$RefreshReg$(_c, \"Chat$observer\");\n$RefreshReg$(_c2, \"Chat\");","map":{"version":3,"names":["React","useEffect","useParams","img","observer","useStore","useAsyncEffect","format","Fragment","_Fragment","jsxDEV","_jsxDEV","Chat","_s","_c","messagesStore","services","textareaValue","handleSendBoxClick","handleChangeTextareaValue","setChatId","setUserId","initMessageList","list","userId","chatId","formatDate","date","Date","className","children","length","filter","message","map","fileName","_jsxFileName","lineNumber","columnNumber","title","createdAt","id","value","onChange","placeholder","rows","cols","src","alt","onClick","_c2","$RefreshReg$"],"sources":["D:/messager/client/src/components/chat.tsx"],"sourcesContent":["import React, { useEffect, FC } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport img from '../icons/send_message.png'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { useStore } from '../hooks/use-store'\r\nimport { useAsyncEffect } from '../hooks/use-async-effect'\r\nimport { format } from 'date-fns'\r\n\r\nexport const Chat: FC = observer(() => {\r\n    const {messagesStore: {\r\n        services: {\r\n            textareaValue,\r\n            handleSendBoxClick,\r\n            handleChangeTextareaValue,\r\n            setChatId,\r\n            setUserId,\r\n            initMessageList,\r\n            // formatDate\r\n        },\r\n        list\r\n    }} = useStore()\r\n\r\n    const { userId, chatId } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (userId)\r\n            setUserId(+userId)\r\n        if (chatId)\r\n            setChatId(+chatId)\r\n    }, [userId, chatId])\r\n\r\n    useAsyncEffect(() => {\r\n        initMessageList()\r\n    }, [])\r\n\r\n    const formatDate = (date: string) => {\r\n        return format(new Date(date), 'HH:mm')\r\n    }\r\n\r\n    return (\r\n        <div className='centered'>\r\n            <div className='message-area'>\r\n                {list.length > 0 ? \r\n                    <>\r\n                        {list.filter((message) => chatId && message.chatId === +chatId).map((message) => \r\n                            <div key={message.id} className={`message-row ${userId && message.userId === +userId ? 'right' : 'left'}`}>\r\n                                <div className={`message-cloud ${userId && message.userId === +userId ? 'right' : 'left'}`}>\r\n                                    {userId && message.userId === +userId ? \r\n                                        <></> \r\n                                        :\r\n                                        <div className='message-sender'>{`User ${message.userId}`}</div>\r\n                                    }\r\n                                    <div>{message.title}</div>\r\n                                    <div className='message-timestamp'>{formatDate(message.createdAt)}</div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </> \r\n                    : \r\n                    <div className='no-messages'>Сообщений нет</div>\r\n                }\r\n            </div>\r\n            <div className='bottom-area'>\r\n                <div className='input-area'>\r\n                <textarea className='textarea' value={textareaValue} onChange={handleChangeTextareaValue} placeholder='Напишите сообщение...' rows={3} cols={67}></textarea>\r\n                {textareaValue.length > 0 ? \r\n                    <img src={img} alt='img' className='send-box' onClick={handleSendBoxClick} />\r\n                    : \r\n                    <></>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}